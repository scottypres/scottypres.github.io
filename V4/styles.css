#tables-container {
    
    position: relative; /* Define a positioning context for sticky children */
}
       
        /* Style for the full-screen SweetAlert modal */
    .full-screen-modal .swal2-container {
        height: 100vh;
        width: 100vw;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .full-screen-modal .swal2-popup {
        width: auto;
        height: auto;
    }
    #addCurrentLocationButton {
    margin-top: 10px; /* Add some top margin to separate it from the list */
}
    #savedLocationsList {
    list-style: none; /* Remove default list styling */
    padding: 0; /* Remove default padding */
    margin: 0; /* Remove default margin */
}

.saved-location-item {
    display: flex;
    justify-content: space-between;
    align-items: center; /* Vertically center the content of list items */
    margin-bottom: 5px; /* Add some space between list items */
}

.saved-location-item a {
    flex-grow: 1; /* Ensure the location link takes up available space */
    padding-right: 10px; /* Add some space between the location name and the delete button */
}

#forecastLengthPopup .config-content label, 
#forecastLengthPopup .config-content input[type="range"] {
    width: calc(100% - 30px); /* Adjust the value 50px to accommodate the span width */
    display: inline-block;
    vertical-align: middle;
    margin-right: 5px; /* Optional spacing between the slider and the text */
}

/* Style for the text output to display inline */
#forecastLengthPopup .config-content span {
    display: inline-block;
    vertical-align: middle;
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
}
       
        #cityNameContainer {
    text-align: left;
    margin: 0px 0;
    position: fixed;
    left:70px;
    top:5px;
    z-index: 10000;
    background-color: white; /* This is the new line you should add */
}

#cityName {
    font-size: 18px;
    font-weight: bold;
    margin: 0;
}
         #autocomplete-results {
            
             background-color: #ffffff;
            border: 2px solid #000000;
            display: none;
            position: absolute;
            z-index: 1000px;
            left:0px;
            top:60px;
            width: calc(100% - 2px); /* Assume border is 1px */
       
        }
        .autocomplete-item {
            padding: 5px;
            cursor: pointer;
            background-color: #ffffff;
        }
        .autocomplete-item:hover {
            background-color: #ffffff;
        }
        /* Add a general header class to apply common header styles across tables */
        .sticky-container {
    position: fixed;
    
    top: 5px;
    background-color: white;
    z-index: 100000;
    padding: 10px; /* Adjust padding as needed */
    box-shadow: 0 2px 5px rgba(0,0,0,0.2); /* Keep the shadow if desired */
    display: inline-block; /* Change to inline-block */
    box-sizing: border-box; /* Padding inside the width */
    
    overflow-x: auto; /* Allow horizontal scrolling if content is too wide */

}
.small-text-cell {
    font-size: 12px; /* Adjust to your preferred size */
}

.smallest-text-cell {
    font-size: 10px; /* Adjust to your preferred size */
}
.cape-cell {
    font-size: 12px; /* Adjust to whatever size you prefer for the CAPE cell text */
}
.fetchbutton {
    width: 150px; /* Adjust as needed */
    /* ...other styles... */
    visibility: hidden;
    display: none;
}
.button {
    
    /* ...other styles... */
}
        #autocomplete-list {
            position: absolute;
            background: #fff;
            border: 1px solid #d4d4d4;
            z-index: 99;
        }

        

        .shear-detected {
            border: 3px solid white;
        }

        

        #autocomplete-list div {
            padding: 10px;
            cursor: pointer;
        }

        #autocomplete-list div:hover {
            background-color: #e9e9e9;
        }

      


        .column-header {
            font-size: 14px;
            white-space: nowrap
            background-color: white;
            text-align: center;
            font-family: Arial, sans-serif;
            overflow: visible;
            text-overflow: ellipsis;
        }

        /* Add a general data cell class to apply common data cell styles */
        .wind-arrow.rotate-0 {
    transform: rotate(0deg);
}

.wind-arrow.rotate-22-5 {
    transform: rotate(22.5deg);
}

.wind-arrow.rotate-45 {
    transform: rotate(45deg);
}

.wind-arrow.rotate-67-5 {
    transform: rotate(67.5deg);
}

.wind-arrow.rotate-90 {
    transform: rotate(90deg);
}

.wind-arrow.rotate-112-5 {
    transform: rotate(112.5deg);
}

.wind-arrow.rotate-135 {
    transform: rotate(135deg);
}

.wind-arrow.rotate-157-5 {
    transform: rotate(157.5deg);
}

.wind-arrow.rotate-180 {
    transform: rotate(180deg);
}

.wind-arrow.rotate-202-5 {
    transform: rotate(202.5deg);
}

.wind-arrow.rotate-225 {
    transform: rotate(225deg);
}

.wind-arrow.rotate-247-5 {
    transform: rotate(247.5deg);
}

.wind-arrow.rotate-270 {
    transform: rotate(270deg);
}

.wind-arrow.rotate-292-5 {
    transform: rotate(292.5deg);
}

.wind-arrow.rotate-315 {
    transform: rotate(315deg);
}

.wind-arrow.rotate-337-5 {
    transform: rotate(337.5deg);
}

.wind-arrow.rotate-360 {
    transform: rotate(360deg);
}

        .data-cell {
            text-align: center;
            white-space: nowrap;
            overflow: hidden;
        }

        .smalldate {
            font-size: 10px;
        }

        .small-font {
            font-size: 16px;
        }

        body {
            margin: 0;
            padding: 0;
        }

        .sticky-header {
            position: sticky;
            top: 0;
            background-color: white;
            z-index: 3;
        }




        .header h2 {
            /* Sticky positioning here is unnecessary as .sticky-header class already makes the header stick */
            margin: 0;
            /* The position, top, and background-color properties should be removed from here */
        }

        /* Add these CSS styles */
        th.daylight {
            border: 2px solid orange;
        }

        /* Updated CSS rule for first-column cells */
        table th:first-child,
        table td:first-child {
            position: sticky;
            left: 0;
            background-color: white;
            z-index: 2;
 white-space: nowrap;
  overflow: hidden;
            min-width: 60px;
            max-width: 120px;
        }
        tr:first-child th:first-child {
  white-space: normal;
}

        th span {
            font-size: 12px;
        }

        table {
            border-collapse: collapse;

        }

        th{
            border: 1px solid black;
            padding: 1px;
            text-align: center;
            font-family: Arial, sans-serif;
           
  
   
        }

        td {
            border: 1px solid black;
            padding: 1px;
            text-align: center;
            font-family: Arial, sans-serif;
            
            /* Keep text on the same line */
        }

        .wind-arrow {
            display: inline-block;
            transform-origin: 50% 50%;
        }

        .column-header2 {
    /* Your specific width for the headers other than the first column */
   
    
    min-width: 1px; /* Example minimum width */
    
}

        /* Updated CSS rule for first-column cells under `tbody` to inherit the width */
        td:first-child {
            position: sticky;
            left: 0;
            background-color: white;
            z-index: 1;
            
        }

        td:not(:first-child) {
            white-space: nowrap;
            /* Prevent text wrapping in the data cells */
        }

       

        .grey-bg {
            /* Max grey level 75% */
            background-color: rgba(0, 0, 0, 0.75);
        }
        /* Additional CSS for rows and columns */
.button-row {
    display: flex; /* Use flexbox to layout items horizontally */
    justify-content: center; /* Center the items along the main axis (horizontally) */
    margin-bottom: 10px; /* Spacing between rows */
    flex-wrap: wrap; /* Allow items to wrap as needed */
    flex-direction: column;
    
}

.button-column {
    display: flex;
    flex-direction: column; /* Stack the header and buttons vertically */
    align-items: center; /* Center the buttons horizontally in the flex container */
    margin-right: 15px; /* Spacing between columns */
    flex-direction: column;
}

.column-header {
    text-align: center; /* Center the header text */
    margin-bottom: 10px; /* Spacing between header and buttons */
    flex-direction: column;
}

#editButton {
    position: fixed; /* Fixed position relative to the viewport */
    top: 0px;      /* Set a top offset */
    left: 0px;    /* Set a right offset */
    z-index: 100;   /* Higher z-index to ensure it's above other content */
    width: 65px;   /* Set a fixed width */
    height: 28px;   /* Set a fixed height */
    padding: 5px 5px; /* Optional: Adjust padding to match desired appearance */
    font-size: 14px; /* Optional: Adjust font size as needed */
    line-height: 1; /* Optional: Adjust line spacing for better readability */
    display: flex;
    justify-content: center;
    align-items: center;
    zoom: 1;
}