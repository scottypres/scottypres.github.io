#autocomplete-list {
    position: absolute;
    background: #fff;
    border: 1px solid #d4d4d4;
    z-index: 99;
  }

  #autocomplete-list div {
    padding: 10px;
    cursor: pointer;
  }

  #autocomplete-list div:hover {
    background-color: #e9e9e9;
  }

  .small-font {
    font-size: 0.6em; /* Smaller font size for the date */
}
        .border-bottom-black {
    border-bottom: 2px solid black;
}
        /* Additional style for clickable cells */
        .clickable-cell {
    cursor: pointer;
    font-size: 0.8em; /* or use px, for example, 12px */
}

        /* Style for the pop-up */
        .popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 20px;
            background-color: #fff;
            border: 1px solid #ddd;
            box-shadow: 0px 0px 10px rgba(0,0,0,0.5);
            z-index: 1000;
        }

        /* Style for the pop-up background overlay */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 999;
        }
        body {
            font-family: Arial, sans-serif; /* Improve readability */
        }
        /* Style for the first cell in each row */
    
        table {
            border-collapse: collapse;
            margin-top: 20px;
           
           
            table-layout: fixed;
            width: auto; /* Ensures the table width is determined by its content */

        }

     

        th {
            background-color: #f2f2f2;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        tr:hover {
            background-color: #e8f4ff;
        }
th, td {
    border: 1px solid #ddd;
    text-align: center;
    padding: 1px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Styling for the first cell of each column (sticky cell) */
th:first-child, td:first-child {
    background: white;
    z-index: 2;
    width: 40px; /* Specific width for first column */
    min-width: 40px; /* Added min-width to ensure it remains at 40px even on scrolling */
    /* max-width property is removed because it is no longer necessary */
    position: sticky;
    left: 0;
}

/* Styling for the all the other cells (except first cell) */
th:not(:first-child), td:not(:first-child) {
    width: 60px; /* Set a specific width for all other cells */
}
        
        input[type=text], button {
            font-size: 16px;
            padding: 10px;
            margin: 10px 0;
            display: block;
            width: calc(80% - 20px); /* Adjust width to allow for padding */
        }

        #zipCodeInput {
            margin-bottom: 10px;
        }

        button {
            margin-bottom: 20px;
        }

        .table-scrollable {
            overflow-x: auto;
            display: block;
            width: 100%;
        }
        .daylight {
    border: 2px solid orange; /* You can adjust the border size if needed */
}

/* Add this new style for sticky table cells */
th:first-child, td:first-child {
    position: sticky;
    left: 0;
    background: white;
    z-index: 2;
    width: 20px; /* Fixed width for the first column cells */
    min-width: 20px;
    max-width: 50px;
}
/* Styling for the all the other cells (except first cell) */
th:not(:first-child), td:not(:first-child) {
    width: 60px; /* Set a specific width for all other cells */
}

/* To ensure the header also stays on top when scrolling vertically */
th {
    position: sticky;
    top: 0;
    z-index: 3; /* This should be greater than z-index of td:first-child to stay on top */
    background: white; /* Ensures header background is not transparent */

}